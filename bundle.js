var t={},e={},i={};!function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var e=1;t.default=function(){return"".concat(e++)}}(i);var n={},s={},o={};!function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(t,e){var i=arguments.length>1&&void 0!==e?e:60,n=null;return function(){for(var e=this,s=arguments.length,o=new Array(s),r=0;r<s;r++)o[r]=arguments[r];clearTimeout(n),n=setTimeout((function(){t.apply(e,o)}),i)}}}(o);var r={};Object.defineProperty(r,"__esModule",{value:!0}),r.SensorTabIndex=r.SensorClassName=r.SizeSensorId=void 0;r.SizeSensorId="size-sensor-id";r.SensorClassName="size-sensor-object";r.SensorTabIndex="-1",Object.defineProperty(s,"__esModule",{value:!0}),s.createSensor=void 0;var a,h=(a=o)&&a.__esModule?a:{default:a},c=r;s.createSensor=function(t){var e=void 0,i=[],n=(0,h.default)((function(){i.forEach((function(e){e(t)}))})),s=function(){e&&e.parentNode&&(e.contentDocument&&e.contentDocument.defaultView.removeEventListener("resize",n),e.parentNode.removeChild(e),e=void 0,i=[])};return{element:t,bind:function(s){e||(e=function(){"static"===getComputedStyle(t).position&&(t.style.position="relative");var e=document.createElement("object");return e.onload=function(){e.contentDocument.defaultView.addEventListener("resize",n),n()},e.style.display="block",e.style.position="absolute",e.style.top="0",e.style.left="0",e.style.height="100%",e.style.width="100%",e.style.overflow="hidden",e.style.pointerEvents="none",e.style.zIndex="-1",e.style.opacity="0",e.setAttribute("class",c.SensorClassName),e.setAttribute("tabindex",c.SensorTabIndex),e.type="text/html",t.appendChild(e),e.data="about:blank",e}()),-1===i.indexOf(s)&&i.push(s)},destroy:s,unbind:function(t){var n=i.indexOf(t);-1!==n&&i.splice(n,1),0===i.length&&e&&s()}}};var l={};Object.defineProperty(l,"__esModule",{value:!0}),l.createSensor=void 0;var d=function(t){return t&&t.__esModule?t:{default:t}}(o);l.createSensor=function(t){var e=void 0,i=[],n=(0,d.default)((function(){i.forEach((function(e){e(t)}))})),s=function(){e.disconnect(),i=[],e=void 0};return{element:t,bind:function(s){var o;e||((o=new ResizeObserver(n)).observe(t),n(),e=o),-1===i.indexOf(s)&&i.push(s)},destroy:s,unbind:function(t){var n=i.indexOf(t);-1!==n&&i.splice(n,1),0===i.length&&e&&s()}}},Object.defineProperty(n,"__esModule",{value:!0}),n.createSensor=void 0;var _=s,u="undefined"!=typeof ResizeObserver?l.createSensor:_.createSensor;n.createSensor=u,Object.defineProperty(e,"__esModule",{value:!0}),e.removeSensor=e.getSensor=void 0;var f=function(t){return t&&t.__esModule?t:{default:t}}(i),p=n,m=r;var v={};e.getSensor=function(t){var e=t.getAttribute(m.SizeSensorId);if(e&&v[e])return v[e];var i=(0,f.default)();t.setAttribute(m.SizeSensorId,i);var n=(0,p.createSensor)(t);return v[i]=n,n};e.removeSensor=function(t){var e=t.element.getAttribute(m.SizeSensorId);t.element.removeAttribute(m.SizeSensorId),t.destroy(),e&&v[e]&&delete v[e]},Object.defineProperty(t,"__esModule",{value:!0}),t.ver=g=t.clear=w=t.bind=void 0;var y=e,w=t.bind=function(t,e){var i=(0,y.getSensor)(t);return i.bind(e),function(){i.unbind(e)}},g=t.clear=function(t){var e=(0,y.getSensor)(t);(0,y.removeSensor)(e)};t.ver="1.0.1";const x=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)},b=window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.msCancelAnimationFrame||window.oCancelAnimationFrame||window.clearTimeout,M={max_d:77.46,point_count:500,point_color:"180,180,180",line_color:"180,180,180",chunk_current_capacity:15,chunk_min_capacity:5,chunk_max_capacity:20,chunk_size_optimize_constant:.6,particle_max_speed:1,particle_slow_down_rate:.8,gravity_constant:.1,pointer_gravity_constant:10,lazy_overload_threshold:1.1,tabu_index:1,GRAVITY_ACTIVE:!0,RANDOMNESS_ACTIVE:!1,zIndex:0,canvas_opacity:1,pointer_interaction:1};class k{constructor(t,e){this.x=t*Math.random(),this.y=e*Math.random(),this.vx=2*(2*Math.random()-1),this.vy=2*(2*Math.random()-1),this.lazy={touched:0,near:0,sleep_frame:0},this.pointer_inter=!1}evolve(){M.pointer_interaction||!this.pointer_inter?(this.x+=this.vx,this.y+=this.vy,M.RANDOMNESS_ACTIVE&&!this.pointer_inter&&(this.vx+=(2*Math.random()-1)/10,this.vy+=(2*Math.random()-1)/10),Math.abs(this.vx)>M.particle_max_speed&&(this.vx*=M.particle_slow_down_rate),Math.abs(this.vy)>M.particle_max_speed&&(this.vy*=M.particle_slow_down_rate),this.lazy.sleep_frame>0||(this.lazy.sleep_frame=Math.round(60*M.tabu_index*Math.max(this.lazy.near/this.lazy.touched-M.lazy_overload_threshold,0)),this.lazy.touched=0,this.lazy.near=0)):this.pointer_inter=!1}cal_alpha(t){return Number(Math.min(1.2-t/M.max_d,1).toFixed(1))}cal_inter_with_pointer(t){const e=t.x-this.x,i=t.y-this.y,n=Math.hypot(e,i);if(!(n>M.max_d||n<1)){if(this.pointer_inter=!0,M.pointer_interaction){let t;n>M.max_d/1.3?t=2:n<M.max_d&&(t=-2);const s=Math.pow(n-M.max_d/4,-1)*M.pointer_gravity_constant*t/10,o={x:Math.sign(e)*s,y:Math.sign(i)*s};this.vx+=o.x,this.vy+=o.y}else this.vx=0,this.vy=0;return{a:this.cal_alpha(n),pos_info:[this.x,this.y,t.x,t.y]}}}cal_inter_with_point(t,e){if(this.lazy.sleep_frame)this.lazy.sleep_frame--;else{const i=t.x-this.x,n=t.y-this.y,s=Math.hypot(i,n);if(s>M.max_d||s<1)return;if(this.lazy.touched++,s<=M.max_d/3&&this.lazy.near++,!M.pointer_interaction&&M.GRAVITY_ACTIVE){const t=Math.pow(s,-2)*M.gravity_constant,e={x:Math.sign(i)*t,y:Math.sign(n)*t};this.vx+=e.x,this.vy+=e.y}if(e)return{a:this.cal_alpha(s),pos_info:[this.x,this.y,t.x,t.y]}}}}class z{constructor(t,e,i,n,s){this.x=t,this.y=e,this.w=i,this.h=n,this.divergence=s,this.points=[]}}class C{constructor(t,e){this.w=t,this.h=e,this.chunk_w=this.w/M.X_CHUNK,this.chunk_h=this.h/M.Y_CHUNK,this.chunks=[],this.generate_chunks(),this.wait_refill_num=0}generate_chunks(){this.chunks=new Array(M.X_CHUNK).fill(null).map((()=>new Array(M.Y_CHUNK).fill(null)));for(let t=0;t<M.X_CHUNK;t++)for(let e=0;e<M.Y_CHUNK;e++)this.chunks[t][e]=new z(this.chunk_w*t,this.chunk_h*e,this.chunk_w,this.chunk_h,(t+e)%2)}insert_point(t){const e=Math.floor(t.x/this.chunk_w),i=Math.floor(t.y/this.chunk_h),n=this.chunks[e][i];n.points.length<M.chunk_current_capacity?n.points.push(t):this.wait_refill_num++}random_remove_points(t){const e=Math.max(Math.floor(t/10),1);for(;t>0;){const i=Math.floor(Math.random()*M.X_CHUNK);for(let n=0;n<M.Y_CHUNK;n++){const s=this.chunks[i][n];let o;if(s.points.length>e){for(let t=0;t<e;t++)s.points.pop();o=e}else o=s.points.length,s.points=[];t-=o}}}decrease_capacity(t){M.chunk_current_capacity=Math.max(M.chunk_min_capacity,M.chunk_current_capacity-t)}increase_capacity(t){M.chunk_current_capacity=Math.min(M.chunk_max_capacity,M.chunk_current_capacity+t)}}class S{constructor(t,e,i,n){this.ctx=t,this.ctx.fillStyle=`rgb(${M.point_color})`,t.strokeStyle=`rgb(${M.line_color})`,this.grid=e,this.fps_manager=i,this.pointer=n;for(let t=0;t<M.point_count;t++)this.grid.insert_point(new k(this.grid.w,this.grid.h));this.draw_buffer=new Array(9).fill(null).map((()=>[])),this.d_info}async traverse(){for(let t=0;;t++){let e=[];if(t>=0&&t<M.X_CHUNK&&e.push(this.calVerticalInteraction(t)),t-2>=0&&t-2<M.X_CHUNK&&e.push(this.evolveVerticalChunks(t-2)),t-4>=0&&t-4<M.X_CHUNK&&e.push(this.updateChunk(t-4)),0===e.length)break;await Promise.all(e)}}loadDrawInfoIntoBuffer(){this.d_info&&this.draw_buffer[10*this.d_info.a-2].push(this.d_info.pos_info)}drawLinesInBuffer(){this.draw_buffer.forEach(((t,e)=>{this.ctx.beginPath(),this.ctx.lineWidth=(e+2)/10,t.forEach((t=>{this.ctx.moveTo(t[0],t[1]),this.ctx.lineTo(t[2],t[3])})),this.ctx.stroke()}));for(let t=0;t<this.draw_buffer.length;t++)this.draw_buffer[t]=[]}async calVerticalInteraction(t){const e=this.grid;for(let i=0;i<M.Y_CHUNK;i++){const n=e.chunks[t][i],s=n.x+n.w,o=n.y+n.h;this.calLocalInteraction(n),n.points.forEach((r=>{null!==this.pointer.x&&(this.d_info=r.cal_inter_with_pointer(this.pointer),this.loadDrawInfoIntoBuffer());let a=0,h=0,c=0,l=0;r.x-M.max_d<n.x&&(a=-1),r.x+M.max_d>=s&&(h=1),r.y-M.max_d<n.y&&(c=-1),r.y+M.max_d>=o&&(l=1);for(let s=a;s<=h;s++)for(let o=c;o<=l;o++)0===s&&0===o||t+s<0||t+s>M.X_CHUNK-1||i+o<0||i+o>M.Y_CHUNK-1||this.calSurroundingInteraction(e.chunks[t+s][i+o],r,n.divergence)}))}this.drawLinesInBuffer()}calLocalInteraction(t){for(let e=0;e<t.points.length-1;e++){const i=t.points[e];for(let n=e+1;n<t.points.length;n++){const e=t.points[n];this.d_info=i.cal_inter_with_point(e,!0),this.loadDrawInfoIntoBuffer(),e.cal_inter_with_point(i,!1)}}}calSurroundingInteraction(t,e,i){const n=i||t.divergence===i;t.points.forEach((t=>{this.d_info=e.cal_inter_with_point(t,n),this.loadDrawInfoIntoBuffer()}))}async evolveVerticalChunks(t){for(let e=0;e<M.Y_CHUNK;e++)this.grid.chunks[t][e].points.forEach((t=>{this.ctx.fillRect(t.x-.5,t.y-.5,1,1),t.evolve()}))}async updateChunk(t){const e=this.grid;for(let i=0;i<M.Y_CHUNK;i++){const n=e.chunks[t][i],s=n.x+n.w,o=n.y+n.h;let r=[];for(let a=0;a<n.points.length;a++){const h=n.points[a];let c=0,l=0;if(h.x<n.x?c=-1:h.x>=s&&(c=1),h.y<n.y?l=-1:h.y>=o&&(l=1),0===c&&0===l)continue;const d=t+c,_=i+l;if(d<0||d>M.X_CHUNK-1)h.vx*=-1,h.x+=h.vx,h.x<=0?h.x=.1:h.x>e.w&&(h.x=e.w-.1);else if(_<0||_>M.Y_CHUNK-1)h.vy*=-1,h.y+=h.vy,h.y<=0?h.y=.1:h.y>e.h&&(h.y=e.h-.1);else{r.push(a);const t=e.chunks[d][_];t.points.length<M.chunk_current_capacity?t.points.push(h):e.insert_point(new k(this.grid.w,this.grid.h))}}let a=0;n.points=n.points.filter(((t,e)=>a===r.length||e!==r[a]||(a++,!1)))}}draw(){this.ctx.clearRect(-8,-8,this.grid.w+8,this.grid.h+8),this.traverse()}}class N{constructor(t){this.grid=t,this.fps_el=document.getElementById("fps"),this.startTime=void 0,this.frame=0,this.avr_fps=0,this.avr_counter=3,this.stable_counter=0,this.batch=Math.round(M.X_CHUNK*M.Y_CHUNK/30)}async initialize(){await new Promise((t=>setTimeout(t,300))),this.startTime=Date.now(),this.tick(),await new Promise((t=>setTimeout(t,1e3)))}tick(){this.frame++;const t=Date.now(),e=this.avr_counter?300:1e3;if(t-this.startTime>=e){const e=(this.frame/((t-this.startTime)/1e3)).toFixed(1);this.avr_counter?(this.avr_counter--,this.avr_fps+=Number(e),this.avr_counter||(this.avr_fps=Math.round(this.avr_fps/3),console.log("Avr FPS:",this.avr_fps))):this.object_optimization(Number(e)),this.fps_el.innerHTML=e,this.startTime=t,this.frame=0}window.requestAnimationFrame((()=>{this.tick()}))}object_optimization(t){const e=t/this.avr_fps;if(e>.9){this.grid.increase_capacity(Math.round((t-.9*this.avr_fps)/6));const e=Math.round(this.grid.wait_refill_num/(10-Math.min(this.stable_counter/5,8)));for(let t=0;t<e;t++)setTimeout((()=>{this.grid.insert_point(new k(this.grid.w,this.grid.h))}),2e3*Math.random());this.grid.wait_refill_num-=e,this.stable_counter++}else this.stable_counter=0,e<=.7?(this.grid.decrease_capacity(3),this.grid.random_remove_points(3*this.batch),this.grid.wait_refill_num=0):e<=.8?(this.grid.decrease_capacity(2),this.grid.random_remove_points(2*this.batch),this.grid.wait_refill_num=Math.floor(this.grid.wait_refill_num/3)):e<=.9&&(this.grid.decrease_capacity(1),this.grid.random_remove_points(this.batch))}}new class{constructor(t){this.el=t,this.canvas=this.newCanvas(),this.ctx=this.canvas.getContext("2d"),this.grid=void 0,this.fps_manager=void 0,this.simulator=void 0,this.pointer={x:null,y:null,is_pointer:!0},this.bindEvent(),this.render_info={draw:!0,need_initialize:!0,delay_after:.5,last_changed_time:0},this.pendingRender(),this.ignore_initial_size_changes=!0}bindEvent(){w(this.el,(()=>{this.ignore_initial_size_changes?this.ignore_initial_size_changes=!1:(b(this.tid),this.canvas.width=this.el.clientWidth,this.canvas.height=this.el.clientHeight,this.render_info.last_changed_time=Date.now(),this.render_info.draw=!1,this.render_info.need_initialize=!0,this.ctx.clearRect(0,0,this.grid.w,this.grid.h),console.log("Canvas cleared!"))})),this.onmousemove=window.onmousemove,window.onmousemove=t=>{this.pointer.x=t.clientX-this.el.offsetLeft+document.scrollingElement.scrollLeft-8,this.pointer.y=t.clientY-this.el.offsetTop+document.scrollingElement.scrollTop-8,this.onmousemove&&this.onmousemove(t)},this.onmouseout=window.onmouseout,window.onmouseout=()=>{this.pointer.x=null,this.pointer.y=null,this.onmouseout&&this.onmouseout()}}newCanvas(){"static"===getComputedStyle(this.el).position&&(this.el.style.position="relative");const t=document.createElement("canvas");var e;return t.style.cssText=`display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:${(e=M).zIndex};opacity:${e.opacity}`,t.width=this.el.clientWidth,t.height=this.el.clientHeight,this.el.appendChild(t),console.log(t),t}optimize_chunk_size(){const t=Math.round(M.max_d*Math.max(M.chunk_size_optimize_constant,.25)),e=e=>{console.log("Optimized chunk size:",t);const i=i=>Math.abs(e/i-t);let n=e/t;return i(Math.floor(n))<i(Math.ceil(n))?Math.floor(n):Math.ceil(n)};console.log(this.canvas.width,this.canvas.height),M.X_CHUNK=e(this.canvas.width),M.Y_CHUNK=e(this.canvas.height),console.log("x chunk num:",M.X_CHUNK),console.log("y chunk num:",M.Y_CHUNK)}async pendingRender(){this.render_info.draw?(this.render_info.need_initialize&&(this.optimize_chunk_size(),this.grid=new C(this.canvas.width,this.canvas.height),this.fps_manager=new N(this.grid),await this.fps_manager.initialize(),this.simulator=new S(this.ctx,this.grid,this.fps_manager,this.pointer),this.render_info.need_initialize=!1,console.log("Canvas Initialized!")),this.requestFrame()):Date.now()-this.render_info.last_changed_time>1e3?(this.render_info.draw=!0,this.pendingRender()):setTimeout((()=>{this.pendingRender()}),1e3*this.render_info.delay_after)}requestFrame(){this.simulator.draw(),this.fps_manager.avr_fps<=60?this.tid=x((()=>{this.pendingRender()})):this.tid=setTimeout((()=>{this.pendingRender()}),1e3/60)}destroy(){g(this.el),window.onmousemove=this.onmousemove,window.onmouseout=this.onmouseout,b(this.tid),this.canvas.parentNode.removeChild(this.canvas)}}(document.body);
